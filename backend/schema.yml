openapi: 3.0.3
info:
  title: Student database
  version: 1.0.0
  description: Your project description
paths:
  /api/token:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /students/:
    get:
      operationId: students_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentList'
          description: ''
  /students/{university_id}/{batch}:
    get:
      operationId: students_retrieve
      parameters:
      - in: path
        name: batch
        schema:
          type: integer
        required: true
      - in: path
        name: university_id
        schema:
          type: integer
        required: true
      tags:
      - students
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetail'
          description: ''
components:
  schemas:
    Dorm:
      type: object
      properties:
        building:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        floor:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        room:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - building
      - floor
      - room
    SexEnum:
      enum:
      - F
      - M
      type: string
      description: |-
        * `F` - Female
        * `M` - Male
    StudentDetail:
      type: object
      properties:
        university_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        batch:
          type: string
        dorm:
          $ref: '#/components/schemas/Dorm'
        admission_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        first_name:
          type: string
          maxLength: 35
        middle_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          nullable: true
          maxLength: 35
        sex:
          $ref: '#/components/schemas/SexEnum'
        section:
          type: string
          nullable: true
          maxLength: 3
        image:
          type: string
          format: uri
          nullable: true
        matric_pdf:
          type: string
          format: uri
          nullable: true
        email:
          type: string
          format: email
          maxLength: 254
        user:
          type: integer
          nullable: true
      required:
      - batch
      - dorm
      - first_name
      - middle_name
      - sex
      - university_id
    StudentList:
      type: object
      properties:
        admission_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        university_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        first_name:
          type: string
          maxLength: 35
        middle_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          nullable: true
          maxLength: 35
        section:
          type: string
          nullable: true
          maxLength: 3
        link:
          type: string
          readOnly: true
      required:
      - first_name
      - link
      - middle_name
      - university_id
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
